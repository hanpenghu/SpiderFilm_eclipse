package hanhan.zhongLiangTongBuKuKuangJia.a003mybatisAndSpringTest001.tongBuDingDanWuLiuXinXi;
import java.util.*;

import hanhan.AbstractedOfAll.AbstractedAll;
import hanhan.utilsOfMd5_32AndPostAPI.UtilsOfMd5AndPostZL;
import hanhan.zhongLiangTongBuKuKuangJia.a002IterfacMapper.ICRUDmanDB;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
@Component("syncLogistics")
public class ZhongLiangTongBuWuLiuZhuangTaiDaoHaiShangDingDanBiao extends AbstractedAll{
	Logger log = LogManager.getLogger(ZhongLiangTongBuWuLiuZhuangTaiDaoHaiShangDingDanBiao.class.getName());
	private static final Integer meiYeXianShiShuo=500;
	private static final Integer OrderStatus2=2;
	private static final String method1="womai.logistics.get";
	@Autowired
	private ICRUDmanDB iCRUDmanDB;
	public ZhongLiangTongBuWuLiuZhuangTaiDaoHaiShangDingDanBiao() {
		super();
	}
	public static void main(String[] args) {
		String[] configs = {"classpath*:hanhan/zhongLiangTongBuKuKuangJia/xml/b003SpringXml/spring.xml"};  
		ApplicationContext ctx = new ClassPathXmlApplicationContext(configs);
		ZhongLiangTongBuWuLiuZhuangTaiDaoHaiShangDingDanBiao syncLogistics=(ZhongLiangTongBuWuLiuZhuangTaiDaoHaiShangDingDanBiao)ctx.getBean("syncLogistics");
		//syncLogistics.synchrnizeLogisticsShiYongFenYe( );
		syncLogistics.synchrnizeLogisticsShiYongFenYe();
	}
	// zhe ge fang fa he xia mian yi ge fang fa xuan yi ge jiu hao le 
	//select top(1) OrderId from Hishop_Orders where OrderStatus=2 order by UpdateDate asc
	//zhe zhong fang fa hui dao zhi: dang di yi tiao yi zhi mei you wu liu fa huo zhuang tai,zui hou yong yuan tui song de shi di yi tiao,qi ta ke hu de ji lu de bu dao tui song 
//	@Scheduled(initialDelay=360000000,fixedRate=3600000)
	public void tongBuWuLiuZhuangTaiBuShiYongFenYeMeiCiQuZuiZaoYiGe(){
		Integer yiFuKuanZongShuLiang = iCRUDmanDB.chaXunSuoYouYiFuKuanDingDanZongShuLiang(OrderStatus2);
		System.out.println("yiFuKuanZongShuLiang="+yiFuKuanZongShuLiang);
		if(yiFuKuanZongShuLiang!=0){
			for(int n=0;n<yiFuKuanZongShuLiang;++n){
				Map<String, String> zuiZaoYiGeMap = iCRUDmanDB.xuanZeZuiZaoYiTiaoBingQieZhuangTaiMaShi2DeDingDanJiLu( );
				if(zuiZaoYiGeMap.size()!=0){
					String OrderId = zuiZaoYiGeMap.get("OrderId");
					if(OrderId!=null){
						String tuiSongDingDanHouZhongLiangFanHuiJieGuo = tuiSongDingDan(OrderId);
						System.out.println("tuiSongDingDanHouZhongLiangFanHuiJieGuo="+tuiSongDingDanHouZhongLiangFanHuiJieGuo);
						if(tuiSongDingDanHouZhongLiangFanHuiJieGuo.contains("logistics")){
							Integer gengXinJiLuShu = iCRUDmanDB.gengXinDingDanZhuangTaiCongYiFuKuanDaoYiFaHuo(OrderId);
							System.out.println("gengXinJiLuShu="+gengXinJiLuShu);
						}
					}
				}
			}
		}
	}
	
//	 @Scheduled(cron ="0 50 18 * * ?")
//	@Scheduled(initialDelay=360000000,fixedDelay=3600000)//shangYiCiJieShuHouTuiChiYiXiaoShiKaiShiXiaYiCi
	//guDingMeiXiaoShiZhiXingYiCi
//	 @Scheduled(initialDelay=360000000,fixedRate=3600000)//1xiaoShiZhiXingYiCi
	@Scheduled(fixedRate=3600000)
	public void synchrnizeLogisticsShiYongFenYe( ){
		 System.out.println("wuLiuZhuangTaiTongBuKaiShi!!!");
		try {
			Integer yiFuKuanZongShuLiangYongLaiFenYe = iCRUDmanDB.chaXunSuoYouYiFuKuanDingDanZongShuLiang(OrderStatus2);
			System.out.println("yiFuKuanZongShuLiangYong="+yiFuKuanZongShuLiangYongLaiFenYe);
			if(yiFuKuanZongShuLiangYongLaiFenYe>0){
				Integer suoYouDingDanZongShuLiang = iCRUDmanDB.chaXunDingDanBiaoZongShuLiang();
				System.out.println("suoYouDingDanZongShuLiang="+suoYouDingDanZongShuLiang);
				Integer zongYeShu=null;
				if(suoYouDingDanZongShuLiang%meiYeXianShiShuo==0){
					zongYeShu=suoYouDingDanZongShuLiang/meiYeXianShiShuo;
				}else{
					zongYeShu=suoYouDingDanZongShuLiang/meiYeXianShiShuo+1;
				}
				for(int n=0;n<zongYeShu;++n){
					try {
						int dangQianYe=n+1;
						List<Map<String,String>> dangQianYeOrderIdMapList = iCRUDmanDB.zhaoChuDangQianYeDeOrderIdMapList(meiYeXianShiShuo,dangQianYe,OrderStatus2);
						for(Map<String,String> mapDangQianYiTiaoJiLu:dangQianYeOrderIdMapList){
							try {
								String OrderId = mapDangQianYiTiaoJiLu.get("OrderId");
								String tuiSongDingDanHouZhongLiangFanHuiJieGuo = tuiSongDingDan(OrderId);
								System.out.println("[[tuiSongDingDanHouZhongLiangFanHuiJieGuo="+tuiSongDingDanHouZhongLiangFanHuiJieGuo+"]]");
								if(tuiSongDingDanHouZhongLiangFanHuiJieGuo.contains("logistics")){
									Integer gengXinDingDanZongShu = iCRUDmanDB.gengXinDingDanZhuangTaiCongYiFuKuanDaoYiFaHuo(OrderId);
									System.out.println("gengXinDingDanZongShu="+gengXinDingDanZongShu);
									if(gengXinDingDanZongShu==1){
										System.out.println("[[diangDanHaoWei--"+OrderId+"--DeDingDanYiGengXin!!!!]]");
									}else{System.out.println("[[diangDanHaoWei--"+OrderId+"--DeDingDanMeiYouGengXin!!!!]]");}
								}else{System.out.println("[[GaiDingDanZanWeiFaHuo！！]]");}
							} catch (Exception e) {log.error(e.getMessage());}
						}
					} catch (Exception e) {log.error(e.getMessage());}
				}
			}else{System.out.println("[[dingDanBiaoZhongMeiYouYiFuKuanZhuangTaiMaWei2DeZhuangTai!!]]");}
		} catch (Exception e) {log.error(e.getMessage());}
	}
	
	
	
	public String tuiSongDingDan(String OrderId){
		String tuiSongJSON="{\"tid\":\""+OrderId+"\"}";
		String sign = UtilsOfMd5AndPostZL.getMd5Str(method1+appkey+appsecret+tuiSongJSON);
		Map<String,String>params=new HashMap<String,String>();
		params.put("method", method1);
		params.put("appkey", appkey);
		params.put("sign", sign);
		params.put("param", tuiSongJSON);
		try {
			String result = UtilsOfMd5AndPostZL.getPostResult(strUrl, params);
			return result;
		} catch (Exception e) {log.error(e.getMessage());}
		return null;
	}
	
	
}
